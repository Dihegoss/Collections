    

//COLLETCTIONS QUEUE

package one.digitalinnovation.queue;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.Set;

public class newMain {

    /**
     * @param args the command line arguments
     */
    
    ///////////CONCEITO DE FILAS////////////////////////
    
    public static void main(String[] args) {
        // TODO code application logic here
    Set<Double> notasAlunos = new HashSet<>();
    
    notasAlunos.add(5.8);
    notasAlunos.add(9.3);
    notasAlunos.add(6.5);
    notasAlunos.add(10.0);
    notasAlunos.add(5.4);
    notasAlunos.add(7.3);
    notasAlunos.add(3.8);
    notasAlunos.add(4.8);
    
        System.out.println(notasAlunos);
        System.out.println("  ");
                
        System.out.println("Remover nota 3.8");
        //remover nota do set
        System.out.println("  ");
        notasAlunos.remove(3.8);
        System.out.println(notasAlunos);
        System.out.println("  ");
        
        System.out.println("Rentornar tamanho do itens Set = ");
        System.out.println(notasAlunos.size());
        
        //Navega em todos os itens do iterator
       Iterator <Double> iterator = notasAlunos.iterator();
        while (iterator.hasNext()){
            System.out.println("  ");
            System.out.println("Navegando com while");
            System.out.println(iterator.next());    
        }
        //ou
        for(Double nota: notasAlunos){
            System.out.println("  ");
            System.out.println("navegando com For");
            System.out.println(nota);
        }
        
        //Limpando itens
        notasAlunos.clear();
        
        //Retornar se o set está Vazio ou não
        System.out.println("  ");
        System.out.println("Set está vazio? = ");
        System.out.println(notasAlunos.isEmpty());
        
        
    }
}
